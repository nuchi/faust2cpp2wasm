#!/usr/bin/env zsh

set -e
set -o pipefail

unset OUTFILE
unset INFILE

alias usage='echo "Usage: faust2cpp2wasm mydsp.dsp -o mydsp.wasm"'

while [ $# -gt 0 ]; do
  if [ "$1" = "-o" ]; then
    if [ -v OUTFILE ]
    then
      echo 'Tried to set output file twice, exiting'
      usage
      exit 1
    fi
    shift
    if [ $# -eq 0 ]
    then
      echo 'Missing output file after "-o", exiting'
      usage
      exit 1
    fi
    OUTFILE="$1"
  elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    usage
    exit 0
  else
    if [ -v INFILE ]
    then
      echo 'Tried to set multiple input files, exiting'
      usage
      exit 1
    fi
    INFILE="$1"
  fi
  shift
done

if [ ! -v INFILE ]; then
  echo 'No input files, exiting'
  exit 1
fi

if [ ! -v OUTFILE ]; then
  echo 'No output file, exiting'
  exit 1
fi

# Check for wasi-dsk
if ! command -v clang++ >/dev/null || \
    [ "$(clang++ --version | grep '^Target:' | awk '{print $2}')" != 'wasm32-unknown-wasi' ]; then
  echo 'The wasi-sdk must be installed and in your PATH. Please make sure $(which clang)' \
       'points to the wasi sdk clang++.'
  echo 'wasi-sdk: https://github.com/WebAssembly/wasi-sdk'
  exit 1
fi

# Check for binaryen
if ! command -v wasm-ctor-eval >/dev/null || ! command -v wasm-opt >/dev/null; then
  echo 'You must have binaryen installed.'
  echo 'binaryen: https://github.com/WebAssembly/binaryen'
  exit 1
fi

INFILENAME=$(basename -- "$INFILE")
CLASSNAME="${INFILENAME%.*}"


tmpfile=$(mktemp /tmp/faust2cpp2wasm.XXXXXX)

faust -lang cpp -a wasm_arch.cpp -uim "$INFILE" -cn "$CLASSNAME" | \
  clang++ \
    -x c++ - -DNANOPRINTF_IMPLEMENTATION \
    -o "$tmpfile" \
    -O2 -fno-exceptions \
    -mexec-model=reactor -fno-math-errno -ffast-math \
    -Wl,--global-base=0

if ! wasm-ctor-eval "$tmpfile" --ctors _initialize,_init_json_ui -o "$tmpfile" \
      | grep -e 'success on _init_json_ui' > /dev/null; then
  echo 'Failed during creating JSON data'
  exit 1
fi
wasm-opt "$tmpfile" -Os -o "$OUTFILE"

rm -rf "$tmpfile" || true
